datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

model User {
  id                  Int      @id @default(autoincrement())
  createdAt           DateTime @default(now())
  login               String   @unique
  password            String
  name                String
  surname             String
  middlename          String?
  email               String   @unique
  confirmed           Boolean  @default(false)
  admin               Boolean  @default(false)
  tutor               Boolean  @default(false)
  createdCourses      Course[] @relation("created-courses")
  participatedCourses Course[] @relation("participated-courses")
  createdGroups       Group[]  @relation("created-groups")
  participatedGroups  Group[]  @relation("participated-groups")
  createdTasks        Task[]   @relation("created-tasks")
}

model Group {
  id        Int      @id @default(autoincrement())
  title     String
  createdAt DateTime @default(now())
  tutorId   Int
  tutor     User     @relation("created-groups", fields: [tutorId], references: [id], onDelete: Cascade)
  students  User[]   @relation("participated-groups")
}

model Course {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  title       String
  description String?
  tutorId     Int
  tutor       User     @relation("created-courses", fields: [tutorId], references: [id], onDelete: Cascade)
  students    User[]   @relation("participated-courses")
  works       Work[]   @relation("courses-works")
}

model Work {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime @default(now())
  inCourses   Course[] @relation("courses-works")
  tasks       Task[]   @relation("works-tasks")
}

enum TaskType {
  Agree
  SelectOne
  SelectMany
}

model Task {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  title       String
  description String?
  type        TaskType
  data        Json
  tutorId     Int
  tutor       User     @relation("created-tasks", fields: [tutorId], references: [id], onDelete: Cascade)
  inWorks     Work[]   @relation("works-tasks")
}
